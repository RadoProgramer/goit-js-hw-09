{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA1CMO,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAEN,IAAMC,EAAQC,SAASC,KAAKC,SAAgB,MAAEC,OACxCC,EAAOJ,SAASC,KAAKC,SAAe,KAAEC,OACtCE,EAASL,SAASC,KAAKC,SAAiB,OAAEC,OAEhD,GAAIG,MAAMP,IAAUO,MAAMF,IAASE,MAAMD,GACvCE,EAAAxB,GAASyB,OAAOC,QAAQ,qDAM1B,IAFA,IAAIC,EAAeX,EAEVY,EAAI,EAAGA,GAAKN,EAAQM,IAC3B1B,EAAc0B,EAAGD,GACdE,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBoB,EAAAxB,GAASyB,OAAOM,QACd,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAH,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBoB,EAAAxB,GAASyB,OAAOC,QACd,sBAAqCM,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAIjDuB,GAAgBN,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const delay = parseInt(this.elements['delay'].value);\n  const step = parseInt(this.elements['step'].value);\n  const amount = parseInt(this.elements['amount'].value);\n\n  if (isNaN(delay) || isNaN(step) || isNaN(amount)) {\n    Notiflix.Notify.failure('Please fill in all fields with valid numbers');\n    return;\n  }\n\n  let currentDelay = delay;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    currentDelay += step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","parseInt","this","elements","value","step","amount","isNaN","$parcel$interopDefault","Notify","failure","currentDelay","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.e79d4818.js.map"}